@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentScheduler.Models.ApplicationUser> signInManager
@if (signInManager.IsSignedIn(User))
{
    <form method="post" id="LogoutForm" asp-action="logoff" asp-controller="Account">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link">Hello, @User.Identity.Name!</li>
                <a class="text-white nav-link" href="javascript:document.getElementById('LogoutForm').submit()">Log Off</a>
        </ul>
    </form>
    
}
else
{
    <ul class ="nav navbar-nav">
        <li class="nav-item">
            <a class=" nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
@*             @Html.ActionLink("Sing Up","Register","Account",routeValues:null,htmlAttributes:new {id="registerlink"})
 *@        </li>
        <li>
            <a class=" nav-link text-white" id="loginLink" asp-controller="Account" asp-action="Login">Sign In</a>
@*             @Html.ActionLink("Sing In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginlink" })
 *@            </li>

    </ul>
}